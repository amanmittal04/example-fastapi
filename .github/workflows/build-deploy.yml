name: Build and Deploy Code

on: [push, pull_request]

jobs:
  # build:
  #   environment:
  #     name: testing
  #   env:
  #     DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
  #     DATABASE_PORT: ${{secrets.DATABASE_PORT}}
  #     DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
  #     DATABASE_NAME: ${{secrets.DATABASE_NAME}}
  #     DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
  #     SECRET_KEY: ${{secrets.SECRET_KEY}}
  #     ALGORITHM: ${{secrets.ALGORITHM}}
  #     ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
  #         POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: pulling git repo
  #       uses: actions/checkout@v3
  #     - name: Install python version 3.9
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.9"
  #     - name: update pip
  #       run: python -m pip install --upgrade pip
  #     - name: install all dependencies
  #       run: pip install -r requirements.txt
  #     - name: install aps scheduler
  #       run: pip install apscheduler
  #     - name: install fastapi mail
  #       run: pip install fastapi-mail
  #     # - name: test with pytest
  #     #   run: |
  #     #     echo "checking database hostname"
  #     #     echo ${{secrets.DATABASE_HOSTNAME}}
  #     #     pip install pytest
  #     #     pytest

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./
  #         file: ./Dockerfile
  #         builder: ${{ steps.buildx.outputs.name }}
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:0.1
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache

  #     - name: Image digest
  #       run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    # needs: [build]
    environment:
      name: testing
    env:
      PRIVATE_KEY: ${{secrets.AWS_PRIVATE_KEY}}
      HOSTNAME: 43.204.97.97
      USER_NAME: ubuntu
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Deploy in EC2
        run: |
          echo "Deploying to EC2"
          echo aman | sudo -E -S su - aman
          cd ~/app/src
          git pull origin main
          pip3 install -r requirements.txt
          echo "Requirements Installed"
          pip3 install uvicorn
          echo "Uvicorn Installed"
          pip3 install fastapi-mail
          echo "fastapi-mail Installed"
          export database_hostname=localhost
          export database_port=5432
          export database_password=postgres
          export database_name=fastapi
          export database_username=postgres
          export secret_key=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
          export algorithm=HS256
          export access_token_expire_minutes=30
          export email=amanmittal0210@gmail.com
          export password=pedqtuwfrandneko
          pip3 install APScheduler
          ~/.local/bin/uvicorn app.main:app
